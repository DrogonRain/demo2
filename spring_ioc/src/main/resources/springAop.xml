<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="cn.zhangbin.service.impl.UserServiceImpl"/>
    <bean id="log" class="cn.zhangbin.config.Log"/>
    <bean id="afterLog" class="cn.zhangbin.config.AfterLog"/>
    
<!--    &lt;!&ndash;aop的配置&ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点 expression: 表达式匹配要执行的方法&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* cn.zhangbin.service.impl.UserServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash;执行环绕; advice-ref执行方法.pointcut-ref切入点&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

<!--    <bean id="diy" class="cn.zhangbin.config.DiyPointcut"/>-->

<!--    <aop:config>-->
<!--        &lt;!&ndash;第二种方法: 使用AOP标签实现&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--            <aop:pointcut id="diyPointcut" expression="execution(* cn.zhangbin.service.impl.UserServiceImpl.*(..))"/>-->
<!--            <aop:before pointcut-ref="diyPointcut" method="before"/>-->
<!--            <aop:after pointcut-ref="diyPointcut" method="after"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!--第三种方式:注解实现-->
    <bean id="annotationPointcut" class="cn.zhangbin.config.AnnotationPointcut"/>
    <aop:aspectj-autoproxy/>
    

</beans>